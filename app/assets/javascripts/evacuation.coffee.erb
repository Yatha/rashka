# Обработка эвакуации
$ ->
  evacuation.init()


# Параметры и функции, связанные с эвакуацией
evacuation =
  dom_element: $("#evac_btn")


  # Запуск слушателя при нажатии
  init: ->
    # При нажатии строит маршрут до ближайшего места от текущего, отображает кнопку рассказать и увеличивает статистику
    $(evacuation.dom_element).click ->
      evacuation.get_directions(app.current_location, app.places.closest)
      evacuation.share_mode_on()
      evacuation.evac_stat_increase()


  # Скрывает кнопку валить и показывает кнопку рассказать
  share_mode_on: ->
    @.dom_element.addClass("hidden")
    $("#share_btn").removeClass("hidden")


  # Запускает метод увеличения статистики
  evac_stat_increase: ->
    $.ajax "../stats/evacuate",
      type: "POST"
      dataType: "json"

      # В случае успеха обновляет поле текста случайной причиной
      success: (reason_text) ->
        $("#reason_field").val(reason_text)
        $("#reason_field").trigger("change")
        console.log "yeahhhhhh"
      error: ->
        console.log "nooooo"


  # Строит маршрут до ближайшего места
  # @param start_point [google.maps.LatLng] место начала
  # @param end_place [Object] место конца
  get_directions: (start_point, end_place) ->

    end_point = new google.maps.LatLng(end_place.lat, end_place.lng)

    directions_service =new google.maps.DirectionsService()
    directions_service_options = evacuation.get_directions_service_options(start_point, end_point)

    directions_service.route(directions_service_options, (response, status) ->
      #в случае успеха запроса выводит маршрут
      if status == google.maps.DirectionsStatus.OK
        evacuation.show_directions(response)
        app.current_marker.setIcon("<%= asset_path('map/mover.gif') %>")
        evacuation.create_end_place_infobox(end_place)
        evacuation.adjust_center()
    )


  # Адаптирует центр карты, чтобы правильно отображался весь маршрут
  adjust_center: ->
    console.log app.google_map.getZoom()
    setTimeout(->
      app.google_map.setZoom(app.google_map.getZoom() - 1)
      center = app.google_map.getCenter()
      app.google_map.panTo(center)
      200
    )


  # Отображение инфобокса у места
  # @param end_point [google.maps.Lang] место конца маршрута
  create_end_place_infobox: (end_place) ->
    place_infobox = new InfoBox(app.infobox_options)
    infobox_content = evacuation.get_evac_infobox(end_place)

    place_infobox.setContent(infobox_content)
    setTimeout(->
      $(".evac_popup").fadeIn(300)
      200
    )
    place_infobox.open(app.google_map, end_place.marker)

    $("#tooltips").addClass("hidden")
    $("#news_evac").removeClass("hidden").html infobox_content


  # Устанавливает контент у инфобокса места, к которому будет идти эвакуация
  # @param place [Object] место
  # @return [DOM] содержимое инфобокса
  get_evac_infobox: (place) ->
    infobox_content = "
      <div class='evac_popup'>
        <div class='left'>
          <img src=" + "<%= asset_path('arrow-left.png') %>" + " class='arrow hidden-xs'>
          <img src='"+ app.places.types[place.type_id].icon + "'class='evac_icon'>
        </div>
        <div class='right'>
          <h5>Точка эвакуации</h5>
          <h4>#{place.name}</h4>
          <p class='time_to_evac'>Собирай манатки, ведь тебе до него всего #{app.time_to_evac}!</p>
        </div>
      </div>
      "


  # Создает рендерер для маршрута
  # @return [google.maps.DirectionsRenderer] рендерер маршрута
  get_directions_renderer: () ->
    directions_renderer_options =
      map: app.google_map
      suppressMarkers: true
      polylineOptions:{strokeColor:'#24c94b'}
    new google.maps.DirectionsRenderer(directions_renderer_options)


  # Настройки отображения маршрута
  # @param start_point [google.maps.LatLng] место начала
  # @param end_point [google.maps.LatLng] место конца маршрута
  # @return [Object] настройки маршрута
  get_directions_service_options: (start_point, end_point) ->
    origin: start_point
    destination: end_point
    travelMode: google.maps.TravelMode.DRIVING


  # Отображение маршрута на карте и запоминание времени маршрута
  # @param response [Маршрут] маршрут до места
  show_directions: (response) ->
    directions_renderer = evacuation.get_directions_renderer()
    directions_renderer.setDirections(response)
    app.directions_renderer = directions_renderer
    app.time_to_evac = response.routes[0].legs[0].duration.text